name: Release

on:
  release:
    types: [created]  # Or [published] if you want to trigger after manual publishing

jobs:
  release:
    runs-on: windows-latest  # This is correct for building on Windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # v4 is the most current

    - name: Set up release version  # Give this step an ID
      id: set_version  # This is the crucial ID
      run: echo "release_version=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v5  # Use v5, which is more current
      with:
        go-version: '1.23' # Fine, but consider using 'stable' if you don't need a specific version

    - name: Build application
      run: |
        echo ${{ env.release_version }}
        mkdir -p releases
        go build -o releases/Takluz_TTS.exe -ldflags="-s -w" main.go
        cp application/config.yaml releases/

    - name: Zip application folder
      run: |
        Compress-Archive -Path releases/* -DestinationPath Takluz_TTS_${{ env.release_version }}.zip -Force

    - name: Upload Release Asset (ZIP)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./Takluz_TTS_${{ env.release_version }}.zip  # Use the output
        asset_name: Takluz_TTS_${{ env.release_version }}.zip
        asset_content_type: application/zip