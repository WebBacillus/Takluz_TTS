name: Release

on:
  release:
    types: [published]  # Or [published] if you want to trigger after manual publishing

jobs:
  release:
    runs-on: windows-latest  # This is correct for building on Windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # v3 is fine, but v4 is the latest if you want to update

    - shell: bash
      run: |
        TAG=${{ github.event.release.tag_name }}
        echo "VERSION=${TAG#v}" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build setting.py
      run: pyinstaller --onefile setting.py

    - name: Build application
      run: |
        mkdir -p releases
        go build -o releases/Takluz_TTS.exe -ldflags="-s -w" main.go
        cp application/config.yaml releases/
        cp dist/setting.exe releases/

    - name: Create ZIP file
      run: |
        Compress-Archive -Path releases/* -DestinationPath releases/Takluz_TTS_${{ env.VERSION }}.zip -Force
        
    - name: Upload Release Asset (ZIP)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: releases/Takluz_TTS_${{ env.VERSION }}.zip
        asset_name: Takluz_TTS_${{ env.VERSION }}.zip
        asset_content_type: application/zip
